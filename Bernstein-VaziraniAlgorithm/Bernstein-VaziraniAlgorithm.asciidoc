+*In[1]:*+
[source, ipython3]
----
from qiskit import *
from qiskit.visualization import plot_histogram
----


+*In[2]:*+
[source, ipython3]
----
%matplotlib inline
----


+*In[3]:*+
[source, ipython3]
----
secret = '10001101'
----


+*In[4]:*+
[source, ipython3]
----
circuit = QuantumCircuit(len(secret)+1, len(secret))

circuit.h(range(len(secret)))
          
circuit.x(len(secret))
          
circuit.h(len(secret))

circuit.barrier()

for i, x in enumerate(reversed(secret)):
    if x == '1':
        circuit.cx(i, len(secret))


circuit.barrier()

circuit.h(range(len(secret)))

circuit.barrier()
circuit.measure(range(len(secret)), range(len(secret)))


----


+*Out[4]:*+
----<qiskit.circuit.instructionset.InstructionSet at 0x1a2555fb10>----


+*In[5]:*+
[source, ipython3]
----
circuit.draw(output='mpl')
----


+*Out[5]:*+
----
![png](output_4_0.png)
----


+*In[6]:*+
[source, ipython3]
----
sim = Aer.get_backend('qasm_simulator')
results = execute(circuit, backend=sim, shots=1).result()
counts = results.get_counts()
print(counts)
----


+*Out[6]:*+
----
{'10001101': 1}
----


+*In[ ]:*+
[source, ipython3]
----

----


+*In[ ]:*+
[source, ipython3]
----

----


+*In[ ]:*+
[source, ipython3]
----

----
